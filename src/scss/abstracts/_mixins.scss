//
// This is a mixin for using your breakpoints
//

@use 'sass:map';
@use '../abstracts/breakpoints' as *;

@mixin mq($key) {
  $size: map-get($breakpoints, $key);

  @media only screen and (min-width: $size) {
    @content;
  }
}

@mixin box($width, $height: $width) {
  width: $width;
  height: $height;
}

//
// EXAMPLE USE CASE
//
// div {
//   // You can pass width && height
//   @include box(200px, 300px);
//   /* or just pass width and the height
//      will default to the width value */
//   @include box(200px);
// }

@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}

//
// EXAMPLE USE CASE
//
// div {
//   position: relative;
//   width: 200px;
//   height: 200px;

//   &:after {
//     @include pseudo(100px, 100px);
//   }
// }

@mixin tablet {
  @media only screen and (min-width: $tablet * 1px) {
    @content;
  }
}

@mixin large {
  @media only screen and (min-width: $large * 1px) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (min-width: $desktop * 1px) {
    @content;
  }
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

//
// EXAMPLE USE CASE
//

// .vertical-centered-element {
//   @include flex-center-vert;
// }

// .horizontally-centered-element {
//   flex-direction: column;
//   @include flex-center-vert;
// }
